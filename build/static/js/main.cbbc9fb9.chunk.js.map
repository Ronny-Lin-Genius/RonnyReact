{"version":3,"sources":["picture/coronavirus.jpg","components/TotalEffect/TotalEffect.jsx","api/index.js","components/Chart/Chart.js","components/Countries/Countries.js","App.js","index.js","components/Chart/Chart.module.css","components/Countries/Countries.module.css","components/TotalEffect/TotalEffect.module.css","App.module.css"],"names":["module","exports","TotalEffect","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","cx","total_item","item1","countUp","start","end","duration","item2","item3","url","fetchData","country","a","changableUrl","axios","get","response","value","modified_response","fetchDailyData","map","index","totalConfirmed","totalDeath","total","date","reportDate","fetchCountries","countries","Chart","useState","dailyData","setDailyData","console","log","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","BarChart","backgroundColor","options","legend","display","title","text","Style","Countries","handleCountryChange","setCountries","FormControl","NativeSelect","nativeSelect","onChange","e","target","i","key","name","App","state","fetchedData","setState","this","src","require","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbbc9fb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coronavirus.fa962a88.jpg\";","import React from 'react';\nimport cx from 'classnames';\nimport CountUp from 'react-countup';\nimport styles from './TotalEffect.module.css';\n\nconst TotalEffect = ({data: {confirmed, recovered, deaths, lastUpdate }})=>{\n\n    if(!confirmed){\n        return 'Loading...'\n    }\n\n    return(\n        <div className={styles.container}>\n            <div className={cx(styles.total_item, styles.item1)}>\n                <h2>People Have Been Confirmed </h2>\n                <h3>\n                    <CountUp className={styles.countUp} start = {0} end = {confirmed} duration = {2}/> People\n                </h3>\n            </div>\n            <div className={cx(styles.total_item, styles.item2)}>\n                <h2>People Have Been Recovered </h2>\n                <h3>\n                    <CountUp className={styles.countUp} start = {0} end = {recovered} duration = {2}/> People    \n                </h3>\n            </div>\n            <div className={cx(styles.total_item, styles.item3)}>\n                <h2>People Have Dead </h2>\n                <h3>\n                    <CountUp className={styles.countUp} start = {0} end = {deaths} duration = {2}\n                    /> People\n                </h3>\n            </div>\n        </div>\n    );\n\n};\n\nexport default TotalEffect;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api'\n\n\nexport const fetchData = async (country) => {\n    const changableUrl = `${url}/countries/${country}`\n    let response;\n    if(country){\n        response = await axios.get(changableUrl);\n    } else {\n        response = await axios.get(url);\n    }\n    const confirmed = response.data.confirmed.value;\n    const recovered = response.data.recovered.value;\n    const deaths = response.data.deaths.value;\n    const lastUpdate = response.data.lastUpdate;\n    const modified_response = {\n        'confirmed': confirmed,\n        'recovered': recovered,\n        'deaths': deaths,\n        'lastUpdate': lastUpdate \n    };\n\n    return modified_response;\n}\n\nexport const fetchDailyData = async () =>{\n    const response = await axios.get(url + '/daily');\n    const modified_response = response.data.map((index)=> (\n     {\n         totalConfirmed: index.totalConfirmed,\n         totalDeath: index.deaths.total,\n         date: index.reportDate\n     }   \n    ))\n    return modified_response;\n};\n\nexport const fetchCountries = async () => {\n    const response = await axios.get(url + '/countries');\n    const modified_response = response.data.countries;\n    return modified_response;\n}\n","import React, {useState, useEffect} from 'react';\nimport Style from './Chart.module.css';\nimport {Line, Bar} from 'react-chartjs-2';\nimport {fetchDailyData} from '../../api'\n\n\nconst Chart = ({ data: {confirmed, deaths, recovered}, country })=>{\n    const [dailyData, setDailyData] = useState([]);\n\n    console.log(confirmed, deaths, recovered);\n\n    useEffect(()=>{\n        const fetchAPI = async()=>{\n            setDailyData(await fetchDailyData());\n        };\n        fetchAPI();\n    }, [setDailyData]);\n\n    const lineChart = (\n        dailyData.length ?\n        (<Line\n        data={{\n            labels: dailyData.map(({ date })=>date),\n            datasets:[{\n                data : dailyData.map(({totalConfirmed}) => totalConfirmed),\n                label: 'Confirmed',\n                borderColor: \"greenyellow\",\n                fill: true},\n\n                {data : dailyData.map(({totalDeath})=>totalDeath),\n                label: 'Deaths',\n                borderColor: 'red',\n                fill: true\n            }]\n        }}\n        />) : null\n    )\n\n    const BarChart = (\n        deaths ?\n        <Bar\n            data ={\n                {labels: ['Infected', 'Recovered', 'Deaths' ],\n                datasets: [{\n                    label: ['d'],\n                    backgroundColor: ['yellow', 'red', 'yellowgreen'],\n                    data:[confirmed , deaths, recovered]\n                }]\n            }}\n            options={{\n                legend: {display: false},\n                title: {display: true, text: `Current in ${country}`}\n            }}\n        /> : null\n    )\n\n\n    return(\n        <div className={Style.container}>\n            {country ? BarChart : lineChart}\n        </div>\n    );\n\n};\n\nexport default Chart;","import React, {useState, useEffect} from 'react';\nimport {NativeSelect, FormControl } from '@material-ui/core';\nimport Style from './Countries.module.css';\nimport {fetchCountries} from '../../api/index.js';\n\n\nconst Countries = ({handleCountryChange}) =>{\n    \n    const [countries, setCountries] = useState([]);\n\n    useEffect(()=>{\n        const fetchAPI = async ()=> {\n            setCountries( await fetchCountries() );\n        };\n        fetchAPI();\n    }, [setCountries]);\n\n\n\n    return(\n        <FormControl>\n            <NativeSelect className={Style.nativeSelect} onChange={(e)=>handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {countries.map((country, i)=><option key={i} value={country.name}>{country.name}</option>)};\n            </NativeSelect>\n        </FormControl>\n    );\n}\n\nexport default Countries;","import React from \"react\";\nimport TotalEffect from './components/TotalEffect/TotalEffect';\nimport Chart from './components/Chart/Chart.js';\nimport Countries from './components/Countries/Countries.js';\nimport {fetchData} from './api/index.js'; // the /index.js can be ignore\nimport Style from './App.module.css';\n// import { wait } from \"@testing-library/react\";\n\nclass App extends React.Component{\n    state = {\n        data: {},\n        country: ''\n    }\n\n    async componentDidMount(){\n        this.setState(this.state.data = await fetchData())\n    }\n\n    handleCountryChange = async(country) => {\n        const fetchedData = await fetchData(country)\n        this.setState({data: fetchedData, country: country})\n    }\n\n\n    render(){\n\n        return(\n            <main>\n                <div className={Style.title}>\n                    <h1>C<span>RON</span>OVIRUS</h1>\n                    <img src={require(\"./picture/coronavirus.jpg\")}></img>\n                </div>\n                <TotalEffect data={this.state.data} />\n                <Countries handleCountryChange={this.handleCountryChange}/>\n                <Chart data={this.state.data} country={this.state.country}/>\n            </main>\n        );\n    };\n\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from './App.js'\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nativeSelect\":\"Countries_nativeSelect__36mgL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TotalEffect_container__11Jil\",\"total_item\":\"TotalEffect_total_item__1JfvB\",\"countUp\":\"TotalEffect_countUp__iaGYT\",\"item1\":\"TotalEffect_item1__1UH49\",\"item2\":\"TotalEffect_item2__RRHGU\",\"item3\":\"TotalEffect_item3__1Q-w3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__-GfWs\"};"],"sourceRoot":""}
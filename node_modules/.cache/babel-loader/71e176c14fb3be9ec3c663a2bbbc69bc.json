{"ast":null,"code":"var _jsxFileName = \"/Users/jdwx/Desktop/Z-My Web/Processing Project/ron-workplace/src/components/Chart/Chart.js\";\nimport React, { useState, useEffect } from 'react';\nimport Style from './Chart.module.css';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    deaths,\n    recovered\n  }\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData((await fetchDailyData()));\n    };\n\n    fetchAPI();\n  }, [setDailyData]);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          totalConfirmed\n        }) => totalConfirmed),\n        label: 'Confirmed',\n        borderColor: \"greenyellow\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          totalDeath\n        }) => totalDeath),\n        label: 'Deaths',\n        borderColor: 'red',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }) : null;\n\n  const BarChart = () => {\n    return /*#__PURE__*/React.createElement(Bar, {\n      data: {\n        label: ['Infected', 'Recovered', 'Deaths'],\n        datasets: [{\n          label: 'People',\n          backgroundColor: ['green', 'yellow', 'red']\n        }],\n        data: [confirmed, deaths, recovered]\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        title: {\n          display: true,\n          text: 'Current Country'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: Style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, lineChart, confirmed ? {\n    BarChart\n  } : {\n    lineChart\n  });\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/jdwx/Desktop/Z-My Web/Processing Project/ron-workplace/src/components/Chart/Chart.js"],"names":["React","useState","useEffect","Style","Line","Bar","fetchDailyData","Chart","data","confirmed","deaths","recovered","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","totalConfirmed","label","borderColor","fill","totalDeath","BarChart","backgroundColor","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AACA,SAAQC,cAAR,QAA6B,WAA7B;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAACC,IAAAA,SAAD;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB;AAAR,CAAD,KAA4C;AACtD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMY,QAAQ,GAAG,YAAS;AACtBD,MAAAA,YAAY,EAAC,MAAMP,cAAc,EAArB,EAAZ;AACH,KAFD;;AAGAQ,IAAAA,QAAQ;AACX,GALQ,EAKN,CAACD,YAAD,CALM,CAAT;AAOA,QAAME,SAAS,GACXH,SAAS,CAACI,MAAV,gBACC,oBAAC,IAAD;AACD,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAYA,IAA1B,CADN;AAEFC,MAAAA,QAAQ,EAAC,CAAC;AACNZ,QAAAA,IAAI,EAAGI,SAAS,CAACM,GAAV,CAAc,CAAC;AAACG,UAAAA;AAAD,SAAD,KAAsBA,cAApC,CADD;AAENC,QAAAA,KAAK,EAAE,WAFD;AAGNC,QAAAA,WAAW,EAAE,aAHP;AAINC,QAAAA,IAAI,EAAE;AAJA,OAAD,EAML;AAAChB,QAAAA,IAAI,EAAGI,SAAS,CAACM,GAAV,CAAc,CAAC;AAACO,UAAAA;AAAD,SAAD,KAAgBA,UAA9B,CAAR;AACAH,QAAAA,KAAK,EAAE,QADP;AAEAC,QAAAA,WAAW,EAAE,KAFb;AAGAC,QAAAA,IAAI,EAAE;AAHN,OANK;AAFP,KADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAgBM,IAjBV;;AAoBA,QAAME,QAAQ,GAAG,MAAM;AACnB,wBACA,oBAAC,GAAD;AACI,MAAA,IAAI,EACA;AAACJ,QAAAA,KAAK,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CAAR;AACAF,QAAAA,QAAQ,EAAE,CAAC;AACPE,UAAAA,KAAK,EAAE,QADA;AAEPK,UAAAA,eAAe,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB;AAFV,SAAD,CADV;AAKAnB,QAAAA,IAAI,EAAC,CAACC,SAAD,EAAaC,MAAb,EAAqBC,SAArB;AALL,OAFR;AASI,MAAA,OAAO,EAAE;AACLiB,QAAAA,MAAM,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SADH;AAELC,QAAAA,KAAK,EAAE;AAACD,UAAAA,OAAO,EAAE,IAAV;AAAgBE,UAAAA,IAAI,EAAE;AAAtB;AAFF,OATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAeH,GAhBD;;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAE5B,KAAK,CAAC6B,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjB,SADL,EAEKN,SAAS,GAAG;AAACiB,IAAAA;AAAD,GAAH,GAAgB;AAACX,IAAAA;AAAD,GAF9B,CADJ;AAOH,CAxDD;;AA0DA,eAAeR,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Style from './Chart.module.css';\nimport {Line, Bar} from 'react-chartjs-2';\nimport {fetchDailyData} from '../../api'\n\n\nconst Chart = ({ data: {confirmed, deaths, recovered} })=>{\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(()=>{\n        const fetchAPI = async()=>{\n            setDailyData(await fetchDailyData());\n        };\n        fetchAPI();\n    }, [setDailyData]);\n\n    const lineChart = (\n        dailyData.length ?\n        (<Line\n        data={{\n            labels: dailyData.map(({ date })=>date),\n            datasets:[{\n                data : dailyData.map(({totalConfirmed}) => totalConfirmed),\n                label: 'Confirmed',\n                borderColor: \"greenyellow\",\n                fill: true},\n\n                {data : dailyData.map(({totalDeath})=>totalDeath),\n                label: 'Deaths',\n                borderColor: 'red',\n                fill: true\n            }]\n        }}\n        />) : null\n    )\n\n    const BarChart = () => {\n        return( \n        <Bar\n            data ={\n                {label: ['Infected', 'Recovered', 'Deaths' ],\n                datasets: [{\n                    label: 'People',\n                    backgroundColor: ['green', 'yellow', 'red']\n                }],\n                data:[confirmed , deaths, recovered]\n            }}\n            options={{\n                legend: {display: false},\n                title: {display: true, text: 'Current Country'}\n            }}\n        />)\n    }\n\n\n    return(\n        <div className={Style.container}>\n            {lineChart}\n            {confirmed ? {BarChart} : {lineChart}}\n        </div>\n    );\n\n};\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}
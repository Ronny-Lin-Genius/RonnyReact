{"ast":null,"code":"var _jsxFileName = \"/Users/jdwx/Desktop/Web Test/JustTest/reactTest/no/react1/src/App.js\";\nimport React, { useState } from 'react';\n\nfunction BoilingVerdict(props) {\n  if (props.temperature >= 100) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 12\n      }\n    }, \"The water would boil.\");\n  }\n\n  console.log(\"aha2\");\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }\n  }, \"no boil\");\n}\n\nfunction App() {\n  const [temperature, setTemperature] = useState();\n\n  function handleChange(e) {\n    setTemperature(temperature => {\n      temperature = e.target.value;\n    });\n    console.log(\"aha1\");\n    BoilingVerdict();\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Enter temperature in Celsius\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: temperature,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BoilingVerdict, {\n    temperature: parseFloat(temperature),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jdwx/Desktop/Web Test/JustTest/reactTest/no/react1/src/App.js"],"names":["React","useState","BoilingVerdict","props","temperature","console","log","App","setTemperature","handleChange","e","target","value","parseFloat"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAIA,KAAK,CAACC,WAAN,IAAqB,GAAzB,EAA8B;AAC5B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;;AAED,SAASC,GAAT,GAAe;AAEb,QAAM,CAACH,WAAD,EAAcI,cAAd,IAAgCP,QAAQ,EAA9C;;AAEA,WAASQ,YAAT,CAAsBC,CAAtB,EAAwB;AACtBF,IAAAA,cAAc,CAACJ,WAAW,IAAI;AAC3BA,MAAAA,WAAW,GAAGM,CAAC,CAACC,MAAF,CAASC,KAAvB;AACF,KAFa,CAAd;AAGAP,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAJ,IAAAA,cAAc;AACf;;AAAA;AAID,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,eAEE;AAAO,IAAA,KAAK,EAAEE,WAAd;AAA2B,IAAA,QAAQ,EAAEK,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,cAAD;AAAgB,IAAA,WAAW,EAAGI,UAAU,CAACT,WAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AASD;;AAED,eAAeG,GAAf","sourcesContent":["import React, {useState} from 'react';\n\nfunction BoilingVerdict(props) {\n  if (props.temperature >= 100) {\n    return <p>The water would boil.</p>\n  }\n  console.log(\"aha2\");\n  return <p>no boil</p>\n}\n\nfunction App() {\n\n  const [temperature, setTemperature] = useState();\n\n  function handleChange(e){\n    setTemperature(temperature => {\n       temperature = e.target.value; \n    });\n    console.log(\"aha1\");\n    BoilingVerdict();\n  };\n\n\n\n  return (\n    <div className=\"App\">\n      <fieldset>\n        <legend>Enter temperature in Celsius</legend>\n        <input value={temperature} onChange={handleChange}/>\n        <BoilingVerdict temperature= {parseFloat(temperature)}/>\n      </fieldset>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
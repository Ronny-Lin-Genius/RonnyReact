{"ast":null,"code":"var _jsxFileName = \"/Users/jdwx/Desktop/Z-My Web/Processing Project/ron-workplace/src/components/Chart/Chart.js\";\nimport React, { useState, useEffect } from 'react';\nimport Style from './Chart.module.css';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    deaths,\n    recovered\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  console.log(confirmed, deaths, recovered);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData((await fetchDailyData()));\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          totalConfirmed\n        }) => totalConfirmed),\n        label: 'Confirmed',\n        borderColor: \"greenyellow\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          totalDeath\n        }) => totalDeath),\n        label: 'Deaths',\n        borderColor: 'red',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }) : null;\n  const BarChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      label: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['green', 'yellow', 'red']\n      }],\n      data: [confirmed, deaths, recovered]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Current Country'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: Style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, country ? BarChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/jdwx/Desktop/Z-My Web/Processing Project/ron-workplace/src/components/Chart/Chart.js"],"names":["React","useState","useEffect","Style","Line","Bar","fetchDailyData","Chart","data","confirmed","deaths","recovered","country","dailyData","setDailyData","console","log","fetchAPI","lineChart","length","labels","map","date","datasets","totalConfirmed","label","borderColor","fill","totalDeath","BarChart","backgroundColor","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AACA,SAAQC,cAAR,QAA6B,WAA7B;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAACC,IAAAA,SAAD;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,GAAR;AAAwCC,EAAAA;AAAxC,CAAD,KAAqD;AAC/D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAc,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ,EAAuBC,MAAvB,EAA+BC,SAA/B;AAEAT,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMe,QAAQ,GAAG,YAAS;AACtBH,MAAAA,YAAY,EAAC,MAAMR,cAAc,EAArB,EAAZ;AACH,KAFD;;AAGAW,IAAAA,QAAQ;AACX,GALQ,EAKN,EALM,CAAT;AAOA,QAAMC,SAAS,GACXL,SAAS,CAACM,MAAV,gBACC,oBAAC,IAAD;AACD,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEP,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAYA,IAA1B,CADN;AAEFC,MAAAA,QAAQ,EAAC,CAAC;AACNf,QAAAA,IAAI,EAAGK,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACG,UAAAA;AAAD,SAAD,KAAsBA,cAApC,CADD;AAENC,QAAAA,KAAK,EAAE,WAFD;AAGNC,QAAAA,WAAW,EAAE,aAHP;AAINC,QAAAA,IAAI,EAAE;AAJA,OAAD,EAML;AAACnB,QAAAA,IAAI,EAAGK,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACO,UAAAA;AAAD,SAAD,KAAgBA,UAA9B,CAAR;AACAH,QAAAA,KAAK,EAAE,QADP;AAEAC,QAAAA,WAAW,EAAE,KAFb;AAGAC,QAAAA,IAAI,EAAE;AAHN,OANK;AAFP,KADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAgBM,IAjBV;AAoBA,QAAME,QAAQ,GACTpB,SAAD,gBACA,oBAAC,GAAD;AACI,IAAA,IAAI,EACA;AAACgB,MAAAA,KAAK,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CAAR;AACAF,MAAAA,QAAQ,EAAE,CAAC;AACPE,QAAAA,KAAK,EAAE,QADA;AAEPK,QAAAA,eAAe,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB;AAFV,OAAD,CADV;AAKAtB,MAAAA,IAAI,EAAC,CAACC,SAAD,EAAaC,MAAb,EAAqBC,SAArB;AALL,KAFR;AASI,IAAA,OAAO,EAAE;AACLoB,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OADH;AAELC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,IAAI,EAAE;AAAtB;AAFF,KATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAcK,IAfT;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAE/B,KAAK,CAACgC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvB,OAAO,GAAGiB,QAAH,GAAcX,SAD1B,CADJ;AAMH,CAzDD;;AA2DA,eAAeX,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Style from './Chart.module.css';\nimport {Line, Bar} from 'react-chartjs-2';\nimport {fetchDailyData} from '../../api'\n\n\nconst Chart = ({ data: {confirmed, deaths, recovered}, country })=>{\n    const [dailyData, setDailyData] = useState([]);\n\n    console.log(confirmed, deaths, recovered);\n\n    useEffect(()=>{\n        const fetchAPI = async()=>{\n            setDailyData(await fetchDailyData());\n        };\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length ?\n        (<Line\n        data={{\n            labels: dailyData.map(({ date })=>date),\n            datasets:[{\n                data : dailyData.map(({totalConfirmed}) => totalConfirmed),\n                label: 'Confirmed',\n                borderColor: \"greenyellow\",\n                fill: true},\n\n                {data : dailyData.map(({totalDeath})=>totalDeath),\n                label: 'Deaths',\n                borderColor: 'red',\n                fill: true\n            }]\n        }}\n        />) : null\n    )\n\n    const BarChart = (\n        (confirmed) ?\n        <Bar\n            data ={\n                {label: ['Infected', 'Recovered', 'Deaths' ],\n                datasets: [{\n                    label: 'People',\n                    backgroundColor: ['green', 'yellow', 'red']\n                }],\n                data:[confirmed , deaths, recovered]\n            }}\n            options={{\n                legend: {display: false},\n                title: {display: true, text: 'Current Country'}\n            }}\n        /> : null\n    )\n\n\n    return(\n        <div className={Style.container}>\n            {country ? BarChart : lineChart}\n        </div>\n    );\n\n};\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}